/*
 *    Filename:	EnglishText.m 
 *    Created :	Thu Feb  6 21:44:07 1992 
 *    Author  :	Vince DeMarco
 *		<vince@whatnxt.cuc.ab.ca>
 *
 * LastEditDate "Mon Jun  8 18:43:24 1992"
 *
 * $Log: not supported by cvs2svn $
# Revision 2.1  1992/06/10  13:53:33  vince
# EnglishTextCell is no longer being used
# a Custom TextObject (MyText) with new delegation
# methods is being used to handle the filter
# functions.
#
# Revision 2.0  1992/04/08  03:43:23  vince
# Initial-Release
#
 *
 */


/* Generated by Interface Builder */

#import "EnglishText.h"
#import <appkit/NXCType.h>

@implementation EnglishText

/* Default charFilter function is NXFieldFilter() */
#define UPKEY       0xAD
#define DOWNKEY     0xAF
#define LEFTKEY     0xAC
#define RIGHTKEY    0xAE
#define QUOTE       0x27

unsigned short englishCharFilter(unsigned short charCode, int flags, unsigned short charSet)
{
    if (flags & NX_COMMANDMASK)
	return NXFieldFilter(charCode,flags,charSet); /* Return whatever the default is */

    switch (charCode) {
        case UPKEY        :
        case DOWNKEY      :
        case LEFTKEY      :
        case RIGHTKEY     :
        case NX_BTAB      :
        case NX_TAB       :
        case NX_DELETE    :
        case NX_BACKSPACE :
        case NX_CR        :
             return NXFieldFilter(charCode,flags,charSet);
             break;
	 }

    if (charCode == QUOTE){
        return charCode;
    }

    if (NXIsAlpha(charCode)){    /* Map all uppercase AlphNumeric keys to lowercase characters */
        return NXToLower(charCode);
    }else{
        return NX_ILLEGAL; /* if the value is illegal */
    }

}

- textDidGetKey:textObject charCode:(unsigned short int) charCode
{
    if ([textObject charFilter] != (NXCharFilterFunc)englishCharFilter){
	oldCharFilter = [textObject charFilter];
	[textObject setCharFilter: (NXCharFilterFunc)englishCharFilter ];
    }
    return self;
}

- (BOOL)textWillChange:textObject
{
    if ([textObject charFilter] != (NXCharFilterFunc)englishCharFilter){
	oldCharFilter = [textObject charFilter];
	[textObject setCharFilter: (NXCharFilterFunc)englishCharFilter ];
    }
    return NO;
}

- textDidMouseDown:textObject
{
    if ([textObject charFilter] != (NXCharFilterFunc)englishCharFilter){
	oldCharFilter = [textObject charFilter];
	[textObject setCharFilter:(NXCharFilterFunc)englishCharFilter];
    }

    return self;
}
@end



