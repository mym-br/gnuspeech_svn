============================================================================

This file contains information about all files within this directory. 
Two out of the three sections of the SpeechObject are in this directory.
The third item (the parser section) is documented and maintained by
Geoff Falk.

All files which have an asterisk (*) beside their names are either obsolete
or will soon be obsolete.

This Description file was created on June 25, 1991. 

============================================================================

========================== The Header Files ================================

structs.h
	This file contains all of the main data structures for the 
	parameter calculation engine.  Functions useful for maintaining the
	structures in this file are defined in the file "structs.c".

delta_doffset.h*
	This file is generated by the program "calc_offset".  If you wish
	to have access to this file please contact Craig Schock.  This file
	contains the index to the diphone databases used in converting 
	diphones to synthesizer parameters.  In order to "speed-up" the 
	rhythm regression calculations, diphone durations are also in this
	file.  In this way, the regression functions need not access the 
	database to determine the duration of a diphone. 

	NOTE: This file will be obsolete after GIDE III is completed because
	the diphone databases will have the index information included at
	the beginning of the database file. 

postures.h*
	This file is used only as a debugging file to print out phone
	strings given the enumeration number.  This file has long been 
	obsolete, but it has been kept around just incase it is needed once
	again.  It is most likely that after the prototype speech object is 
	finished, this file will no longer be needed.

MessageStructs.h
	In the server, all messages are created by hand (i.e. we do not use
	MiG due to overhead considerations).  All messages must contain a 
	header and information about the data being sent in the message. 
	Essentially, a message is a C structure with various necessary
	fields as well as message data.  All structures used in message 
	passing are defined in this file.  For more information about 
	message passing, see the digital librarian.  All low-level 
	messaging functions which are used in the Speech Object are 
	contained in the file "Messages.c".

SpeechMessages.h
	All messages are enumerated.  The enumeration value of message is 
	passed in the msg_id field of the message header.  This file 
	contains the enumeration definitions of all messages.

server_structs.h
	This file holds the user-database definition for the speech object.
	Each application using the speech object will most likely have 
	speaker attributes different from other applications (i.e. different
	application dictionary).  All speaker attribute data structures are
	defined in this file

=============================== The C Files ================================

structs.c
	This file contains functions which maintain the structures 
	defined in "structs.h".  Currently these functions offer easy 
	interface for creating, modifying and freeing these data structures.
	There are no functions for reading or traversing the data structures
	because this would produce extra overhead in the Calculation 
	Engine (i.e. the very place we want as little overhead as possible).
	Since I am probably the only person using the data in these 
	structures, they are not scheduled to be written.  However, if there
	is some need for these routines, I will write them.

scanner.c
	This file contains one (1) function.  It is the scanner which 
	converts a phone string (which complies with the parser definition)
	to a string of tokens.   

delta_calc.c
	This is the main file in the Calculation Engine.  It uses a 
	"delta-type" calculation technique which has proven to be at least
	one (1) order of magnitude faster than the "absolute-value, 
	linear-interpolation" technique used previously.  This method
	provides a stream of data rather than chunks of data.  This greatly
	reduces array index calculation when the data has to be stored.

normal_dist.c*
	This file contains a function which transforms a random number 
	generator with a standard normal curve.

Messages.c
	This file contains low-level functions for setting up and sending
	messages.  These functions provide the functionality of NeXT's MiG
	(at our level of need) with a substantially reduced overhead.

server.c
	This file contains the the higher level functions which communicate
	with the users requiring the services of the Speech Object.  When a 
	message is receieved, it is dispatched to the correct handler.  All 
	handlers are defined in the file "server_handler.c".  Originally, 
	this file and "server_handler.c" were one (1) file, but it was soon
	realized that the increased modularity of splitting the file into 
	two (2) files significantly increased the ease at which new 
	messages could be added to the Speech Object.

server_handler.c
	This file contains the handlers for the server.  All functions in
	this file take one (1) parameter.  The parameter is the message
	which is to be handled.

test_scanner.c*
	This file contains the main() function.  Currently, it is being
	used for debugging and testing purposed.  It is the highest level
	of the speech synthesis system.  It shows which functions must 
	be called to generate speech.
