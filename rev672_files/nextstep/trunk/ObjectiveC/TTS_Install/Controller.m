/*
 *    Filename:	Controller.m 
 *    Created :	Mon Jun  1 18:22:08 1992 
 *    Author  :	Vince DeMarco
 *		<vince@whatnxt.cuc.ab.ca>
 *    LastEditDate was "Mon Jun  1 19:41:19 1992"
 *
 *    $Id: Controller.m,v 1.1 2002-03-21 16:49:48 rao Exp $
 *
 *    $Log: not supported by cvs2svn $
# Revision 1.0  1992/06/09  05:22:41  vince
# Initial revision
#
 */


/* Generated by Interface Builder */

#import "Controller.h"

#import <appkit/Application.h>
#import <appkit/OpenPanel.h>
#import <appkit/Form.h>
#import <appkit/Panel.h>
#import <defaults/defaults.h> // For NXArgv and NXArgc

#import <TextToSpeech/TTS_types.h>
#import <stdio.h>
#import <stdlib.h>
#import <sys/file.h>
#import <sys/types.h>
#import <libc.h>

#import "DirPanel.h"

@implementation Controller

- setFontLocation:sender
{
    id openPanel =[[OpenPanel new] setTitle: "Set Font Dir Location"];
    const char *fntPath;
    char fontPath1[1024];
    char fontPath2[1024];
    char fontPath3[1024];

    if ([openPanel dirPanelRunModal]){
	fntPath = [openPanel directory];

	sprintf(fontPath1,"%s/%s/%s",fntPath,"Phonetica.font","Phonetica");
	sprintf(fontPath2,"%s/%s/%s",fntPath,"Lexical.font","Lexical");
	sprintf(fontPath3,"%s/%s/%s",fntPath,"Trillium-Phonetic.font","Trillium-Phonetic");

	if ( (access(fontPath1,R_OK) < 0) && (access(fontPath3,R_OK) < 0) && (access(fontPath3,R_OK) < 0)){
	    NXRunAlertPanel("Set Font Location",
			    "The files\nPhonetica.font, Lexical.font and Trillium-Phonetic.font\nDon't exist in the directory %s try again",
			    "Okay",NULL,NULL,fontPath);
	    
	    fontPath[0] = '\000';
	}else{
	    strcpy(fontPath,fntPath);
	    [fontLocationField setStringValue: fontPath];
	    if (systemPath[0])
		[acceptButton setEnabled:YES];
	}

    }
    return self;
}

- setServerLocation:sender
{
    id openPanel = [[OpenPanel new] setTitle: "Set TTS_Server Location"];
    char serverPath[1024];
    const char *sysPath;

    if ([openPanel dirPanelRunModal]){
	sysPath = [openPanel directory];
	sprintf(serverPath,"%s/%s",sysPath,TTS_SERVER_NAME);
	if (access(serverPath,X_OK) < 0){
	    NXRunAlertPanel("Set Server Location",
			    "The File %s Doesn't Exist in the directory %s try again",
			    "Okay",NULL,NULL,TTS_SERVER_NAME,systemPath);

	    systemPath[0] = '\000';
	}else{
	    strcpy(systemPath,sysPath);
	    [serverLocationField setStringValue: systemPath];
	    if (fontPath[0])
		[acceptButton setEnabled:YES];
	}
    }

    return self;
}

- accept:sender
{
    char  shellScriptPath[1024];
    char  appDirectory[1024];
    FILE *process;
    char  command[256];
    char *suffix;

    strcpy(appDirectory, NXArgv[0]);
    if (appDirectory[0] == '/') {               /* if absolute path */
        if (suffix = rindex(appDirectory, '/'))
            *suffix = '\000';                   /* remove executable name */
    } else {
        sprintf(command, "which '%s'\n", NXArgv[0]);
        process = popen(command, "r");
        fscanf(process, "%s", appDirectory);
        pclose(process);
        if (suffix = rindex(appDirectory, '/'))
            *suffix = '\000';                   /* remove executable name */
        chdir(appDirectory);
        getwd(appDirectory);

    }
    sprintf(shellScriptPath,"%s/%s %s %s",appDirectory,"InstallScript",systemPath,fontPath);

    fprintf(stderr,"path = %s\n",shellScriptPath);
    system(shellScriptPath);
    return self;
}

- appDidInit:sender
{
    if (getuid() != 0){
	NXRunAlertPanel("TTS_Install","This program must be run as root","Okay",NULL,NULL);
	[NXApp terminate:sender];
    }
    return self;
}
@end
